Fichier existant : 
trainSet.csv

Il faut : 
- calculer les moyennes des varrAcc des 6 mouvements => trainSet.csv
- calculer les moyennes des varrAcc par genre (6 modèles par genre) => fiModelMen.csv + fiModelWomen.csv

Constantes : 
TRAIN_SET = "trainSet.csv"
FI_MODEL = "fiModel.csv"
FI_MODEL_MEN = "fiModelMen.csv"
FI_MODEL_WOMEN = "fiModelWomen.csv"
LENGTH_TITLE = 50
NB_PATH = 15
LG_PATH = 10
NB_FILES = 360
NB_DATA = 600

structures : 
paths[NBPATH][LGPATH] = {/*libellés des colonnes*/}
sumAveragesMen[NB_DATA] 
sumAveragesWomen[NB_DATA] 
nbValuesMen[NB_DATA] 
nbValuesWomen[NB_DATA] 

module(Creation of models ;;error)
---* Creation of models 
fopen_s(&pFiTrainSet, TRAIN_SET, "r")
fopen_s(&pFiModel, FI_MODEL , "w")
fopen_s(&pFiMen, FI_MODEL_MEN , "w")
fopen_s(&pFiWomen, FI_MODEL_WOMEN , "w")

if (pFiTrainSet && pFiModel && pFiMen && pFiWomen)
iLine = 1
pFiTrainSet  = se positionner sur la Line n° 1 de "trainSet.csv"
title = Ligne n° iLine pFiTrainSet 
error = fgets(title,LENGTH_TITLE, pFiTrainSet)
sortir title
error = fscanf_s(pFiTrainSet, "%d", &mov.move)

module(posLineTrainSet;pFitrainSet, iLine;iLine, pFitrainSet)

do while (!eof(pFiTrainSet))
movement = fscanf_s(pFiTrainSet, "%d", &mov.move)
currentMovement = movement

sumAveragesMen[NB_DATA] = 0 
sumAveragesWomen[NB_DATA] = 0 
nbValuesMen[NB_DATA] = 0
nbValuesWomen[NB_DATA] = 0

do while (!eof(pFiTrainSet) && currentMovement == mov)
genderNum = Ligne n° iLine, colonne n°2 dans "trainSet.csv"
module(posLineTrainSet;pFitrainSet, iLine;iLine, pFitrainSet)

mov = fscanf_s(pFiTrainSet, "%d", &mov.move)

if(genderNum == 0)
module(lineProcessing;iLine, sumAveragesWomen, nbValuesWomen; sumAveragesWomen, nbValuesWomen)
else
module(lineProcessing; iLine, sumAveragesMen, nbValuesMen; sumAveragesMen, nbValuesMen)
endif

module(posLineTrainSet;pFitrainSet, iLine;iLine, pFitrainSet)

movement = fscanf_s(pFiTrainSet, "%d", &mov.move)
currentMovement = movement
enddo

module(writeData;pFiWomen, sumAveragesWomen,nbValuesWomen,movement, pFiMen, sumAveragesMen,nbValuesMen;error)

enddo

fclose(pFiTrainSet)
fclose(pFiModel)
fclose(pFiMen)
fclose(pFiWomen)

else
sortir "ERREUR : l'un des fichier n'a pu s'ouvrir"
endif
------

module(lineProcessing; iLine, sumAverages, nbValues; sumAverages, nbValues)
---* lineProcessing
// car le 1er Vacc commence à la 4ème colonne
iRow = 4

do while (on est pas à la fin de la ligne en cours && iRow < NB_DATA)
pFiTrainset = ligne n° iLine, colonne n° iRow
sumAverages[iRow] += valeur pointée par pFiTrainset (iLine, iRow)
nbValues[iRow]++
iRow++
enddo
------

module(posLineTrainSet;pFitrainSet, iLine;iLine, pFitrainSet)
---* posLineTrainSet
iLine++
pFiTrainSet = Ligne n° iLine dans "trainSet.csv"
------

module(writeData;pFiModel, pFiWomen, sumAveragesWomen,nbValuesWomen,movement, pFiMen, sumAveragesMen,nbValuesMen;error)
---* writeData
fprintf(pFiModel)
érire le mouvement dans pFiModel

module(writeGenderData;pFiWomen, movement;)

module(writeGenderData;pFiMen, movement;)

iVacc = 0
do while (iVacc < NB_DATA)

finalAverageWomen =  sumAveragesWomen[iVacc]/nbValuesWomen[iVacc]
écrire finalAverageWomen dans pFiWomen

finalAverageMen = sumAveragesMen[iVacc]/nbValuesMen[iVacc]
écrire finalAverageMen dans pFiMen

totalAverage = (finalAverageWomen  + finalAverageMen) / 2 
écrire totalAverage  dans pFiModel 

iVacc++
enddo
------

module(writeGenderData;pFiGender, movement;)
---* writeGenderData
fprintf(pFiGender)
écrire le movement dans pFiGender
------